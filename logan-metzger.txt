https://codepen.io/loganmetzger/pen/WNQJapp?editors=1000

1. What is Semantic HTML? 

Semantic HTML is meaningful and descriptive. Semantic tags include things like <nav> <p> <header> etc, which have an inherent purpose associated with the tag. Presentational HTML is the opposite, which would be something like a <div> or <span> which are just generic containers. Semantic HTML helps with SEO, code readability and coherence, as well as accessibility.

2. What is HTML used for? 

HTML is used to make the the structure of the page. In the house analogy, HTML is like the frame/other building materials the house is made out of. CSS would then be the paint/aesthetic elements, while JS would be the plumbing and electrical work.

3. What is an attribute and where do we put it? 

An attribute is essentially extra data that can be added to a tag. It gets put inside the tags brackets like this: <a href="https://www.someurl.com>

4. What is the h1 tag used for? How many times should I use it on a page?

An <h1> tag is the headline for the page, and should only be used once per page. This is to optimize SEO, and ensure you get the most possible visits from Google searches.

5. Name two tags that have required attributes

Both <img> and <a> require attributes in order to function. The <img> requires a link or source for an image, while the <a> requires an href to a specific url

6. What do we put in the head of our HTML document?

The head generally contains things like the <title> to the page, link to a <style> sheet, or potentially the link to our <script>. This is also where any metadata for the page usually is place. These are things that affect the way a page is displayed, but do not appear themselves as an element on the page.
 
7. What is an id? 

An ID is a attribute that can be assigned to a tag. An ID is the most specific way to identify something between HTML and CSS. The # tag is also used to anchor links to specific parts of the page that would otherwise require a lot of scrolling to get to.

8. What elements can I add an id to? 

You can add it to any HTML element you want!

9. How many times can I use the same id on a page? 

You should only use each unique id one time, to make your code more semantic and less confusing.

10. What is a class? 

A class is another attribute that can be used to identify different tags or elements in your HTML

11. What elements can I add a class to? 

Anything you want!

12. How many times can I use the same class on a page? 

You can use a class as many times as you want.

13. How do I get my link to open in a new tab?

You can simply add a target="_blank" attribute to the anchor tag like so:
<a href="https://www.lambdaschool.com" target="_blank">Visit Lambda School!</a> 

14. What is the alt attribute in the image tag used for? 

The alt attribute is an alternative text that is displayed when the image cannot be. It's also used for accessibility reasons in case someone is unable to view the image on the screen, so they can at least get a general idea about what should be there.

15. How do I reference an id?

#id {}

16. What is the difference between a section and a div

Essentially a section is semantic while a div is generic. A section is considered one part of a page where all the information is grouped and related to a single theme, which would appear in an outline of the page. A div has no inherent meaning, and can be used to group whatever you want.

17. What is CSS used for? 

CSS is used to style the various elements from HTML, giving them color, size, shape, arrangement, and various other traits that make the page more aesthetically pleasing.

18. How to we select an element? Example - every h2 on the page

h2 {
	Color: blue;
}

19. What is the difference between a class and an id? - Give me an example of when I might use each one

A class is more general, and will often be attached to various different elements on the page to style them all the same way. An ID is much more specific and can only be sed to style one specific element on the page. For instance, a class could be used to style multiple different images on the page to all look the same way, however and ID is much more specific and might only be used to style something you are using once on the page.

20. How do we select classes in CSS?

.class{
    	Color: blue;
}

21. How do we select a p element with a single class of “human””?

p.human{
	Color: blue;
}

22. What is a parent child selector? When would this be useful? 

A parent child selector is used to select specific tags that are nested inside of one another (the parent being more general, and the child being the nested element). This would be useful to be able to select things more specifically to style in CSS without having to use class or id to name them. 

23. How do you select all links within a div with the class of sidebar?

.sidebar a{
	color: blue;
}

24. What is a pseudo selector?

A pseudo selector is used to define a particular state of an element that will then have a different style applied to it. This could be, for example, when the mouse cursor is over top of the specific element or it might style the color of a link to change once it has been clicked. There's lots of different ways to do this!

25. What do we use the change the spacing between lines?

The line-height property can change the spacing between lines.

26. What do we use to change the spacing between letters?

The letter-spacing property can be used to change the space between letters.

27. What do we use to to change everything to CAPITALS? lowercase? Capitalize?

p{
	text-transform: uppercase;
	text-transform: lowercase;
}

Obviously we wouldn't use them both in the same selector, since the capitalization would be blocked by the lowercase value.

28. How do I add a 1px border around my div that is dotted and black?

div{
	border: 1px dotted black;
}

29. How do I select everything on the page? 

The wildcard selector will select every single element on the page

*wildcard {
	color: blue;
}

30. How do I write a comment in CSS?

/* You write comments by including the forward slash and asterisk */

31. How do I find out what file I am in, when I am using the command line? 

Entering the code "pwd" shows which current working directory you're in.

32. Using the command line - how do I see a list of files/folders in my current folder?

You can see a list of everything in the directory you're currently in with the command "ls"

33. How do I remove a file via the command line? Why do I have to be careful with this? 

You can remove a filed using the command "rm" and then stating which file you want to remove. This can be dangerous since there is no warning given before deleting the file permanently, unlike what would happen using the GUI.

34. Why should I use version control? 

Version control basically gives you a time machine, allowing you to see all the different iterations of your code throughout your time working on it. This is hugely advantageous because you can jump back to a prior version to see what changed if you encounter a problem or bug. You can also use version control to branch or fork your project in order to try out new features without breaking the current version.

35. How often should I commit to github?

You should commit to GitHub fairly often. Big commits can lead to potential errors and bugs that are harder to find and fix. Ideally you should be able to make single line commit messages when you do commit.

36. What is the command we would use to push our repo up to github? 

git push -u origin firstName-lastName

37. Walk me through Lambda's git flow. 

	1. Fork the Repo to your GitHub account
	2. Add your TL as a collaborator
	3. Clone the repo to your computer
	4. Create a branch
	5. Work on the project, making sure to commit as often as needed
	6. Push branch to GitHub
	7. Add TL as reviewer on pull request

Stretch Questions

    1. What is the difference between an inline element and a block element?

Block elements start a completely new line on the page with each new tag. The <p> tag is a great example of this, since each new <p> will start a new line. Inline elements, meanwhile, do not start new lines for each tag. Another major difference is that block elements can be styled with width, height, border, margin, and padding. Inline elements can't be given such specific dimensions, and can only have a margin added to them. A great example of an inline element would be a span highlighting a specific phrase in a paragraph of text.

    2. What happens when an element is positioned absolutely? 

Absolute positioning means that an element is positioned relative to the nearest positioned ancestor. If the element doesn't have any positioned ancestors it uses the document body and moves along with the page when scrolling.

    3. How do I make an element take up only the amount of space it needs but also have the ability to give it a width? 

If I'm understanding the question correctly, you could potentially give the element the width and height you want it to have, and then give it margins that add up to the total amount of width you'd like it to occupy on the page.


    4. Name 3 elements that are diplay block by default, 2 elements that are display inline by default and 1 element that is display inline-block by default

Block: <div>, <ol>, <section>
Inline: <span> and <button>
Inline-Block: <img>

    5. In your own words, explain the box model. What is the "fix" for the box model, in other words, how do we make all elements respect the width we've given them? 

The box model is a model that allows you to define the content area, padding, border, and margin of every element on the page. This gives you the ability to style things very specifically, and ensure that they are in the right place/sized correctly on the screen. This can sometimes be a pain in the butt though, since adding padding to an element for instance, will inflate the total size of the box on every single side, beyond the width and height definitions you give it.

Using the CSS below you can ensure that the width and height of the element will be exactly what you want it to be, without having to do math between your content, padding, border, and margin

.element{
	box-sizing: border-box;
}